<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.OperationLogMapper">
  <resultMap id="BaseResultMap" type="com.example.bean.OperationLog">
    <id column="operation_id" jdbcType="BIGINT" property="operationId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="service_code" jdbcType="VARCHAR" property="serviceCode" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="request_time" jdbcType="TIMESTAMP" property="requestTime" />
    <result column="operation_status" jdbcType="VARCHAR" property="operationStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    operation_id, user_id, user_name, service_code, service_name, request_time, operation_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operation_log
    where operation_id = #{operationId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from operation_log
    where operation_id = #{operationId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.bean.OperationLog">
    insert into operation_log (operation_id, user_id, user_name, 
      service_code, service_name, request_time, 
      operation_status)
    values (#{operationId,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{serviceCode,jdbcType=VARCHAR}, #{serviceName,jdbcType=VARCHAR}, #{requestTime,jdbcType=TIMESTAMP}, 
      #{operationStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.bean.OperationLog">
    insert into operation_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operationId != null">
        operation_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="serviceCode != null">
        service_code,
      </if>
      <if test="serviceName != null">
        service_name,
      </if>
      <if test="requestTime != null">
        request_time,
      </if>
      <if test="operationStatus != null">
        operation_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operationId != null">
        #{operationId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="serviceCode != null">
        #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="requestTime != null">
        #{requestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationStatus != null">
        #{operationStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.bean.OperationLog">
    update operation_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="serviceCode != null">
        service_code = #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="requestTime != null">
        request_time = #{requestTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operationStatus != null">
        operation_status = #{operationStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where operation_id = #{operationId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.bean.OperationLog">
    update operation_log
    set user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      service_code = #{serviceCode,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      request_time = #{requestTime,jdbcType=TIMESTAMP},
      operation_status = #{operationStatus,jdbcType=VARCHAR}
    where operation_id = #{operationId,jdbcType=BIGINT}
  </update>
  <sql id="base_query">
    <trim prefix="WHERE" prefixOverrides="AND | OR">
      <if test="null != operationId">
        andt.operation_id=#{operationId,jdbcType=BIGINT}
      </if>
      <if test="null != userId">
        andt.user_id=#{userId,jdbcType=INTEGER}
      </if>
      <if test="null != userName">
        andt.user_name=#{userName,jdbcType=VARCHAR}
      </if>
      <if test="null != serviceCode">
        andt.service_code=#{serviceCode,jdbcType=VARCHAR}
      </if>
      <if test="null != serviceName">
        andt.service_name=#{serviceName,jdbcType=VARCHAR}
      </if>
      <if test="null != requestTime">
        andt.request_time=#{requestTime,jdbcType=TIMESTAMP}
      </if>
      <if test="null != operationStatus">
        andt.operation_status=#{operationStatus,jdbcType=VARCHAR}
      </if>
    </trim>
  </sql>
  <select id="find" parameterType="com.example.bean.OperationLog" resultMap="BaseResultMap">
    selectt.*fromoperation_log t
    <include refid="base_query" />
  </select>
  <select id="list" parameterType="com.example.bean.OperationLog" resultMap="BaseResultMap">
    selectt.*fromoperation_log t
    <include refid="base_query" />
  </select>
  <select id="pageList" parameterType="com.example.bean.OperationLog" resultMap="BaseResultMap">
    selectt.*fromoperation_log t
    <include refid="base_query" />
    <if test="page != null">
      limit #{startNum,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
    </if>
  </select>
</mapper>